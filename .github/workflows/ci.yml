name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  packages: write
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        working-directory: web
        run: npm ci

      # - name: Lint
      #   working-directory: web
      #   run: npm run lint --if-present

      # - name: Type check
      #   working-directory: web
      #   run: |
      #     # Try the normal check first
      #     npm run check --if-present || {
      #       echo "⚠️ Type check failed, trying alternative approach..."
      #       # Fallback: run svelte-check directly with npx
      #       npx svelte-check --tsconfig ./tsconfig.json || {
      #         echo "❌ Type check failed even with fallback"
      #         exit 1
      #       }
      #     }
      - name: Run unit tests
        working-directory: web
        run: npm test --if-present
      - name: Build app
        working-directory: web
        run: npm run build --if-present

      # Only run Docker and release steps on push to main
      - name: Setup Node.js for semantic-release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install semantic-release dependencies
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          npm ci
          npm install -g semantic-release @semantic-release/changelog @semantic-release/npm

      - name: Run semantic-release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
        run: npx semantic-release

      - name: Get version from semantic-release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            zehbart/wayli:v${{ env.VERSION }}
            zehbart/wayli:latest
            zehbart/wayli:${{ env.SHORT_SHA }}

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            Automated semantic release v${{ env.VERSION }}

            This release was automatically generated based on conventional commit messages.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
