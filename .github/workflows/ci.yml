name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Required permissions for semantic-release and Docker operations
permissions:
  packages: write      # For npm package publishing (if needed)
  contents: write      # For creating tags and commits
  id-token: write     # For Docker registry authentication
  issues: write       # For semantic-release GitHub plugin
  pull-requests: write # For semantic-release GitHub plugin

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
          npm list @sveltejs/vite-plugin-svelte
          npm list @sveltejs/kit
          npm list vitest

      - name: Prepare SvelteKit
        working-directory: web
        run: npx svelte-kit sync

      # - name: Lint
      #   working-directory: web
      #   run: npm run lint --if-present

      # - name: Type check
      #   working-directory: web
      #   run: |
      #     # Try the normal check first
      #     npm run check --if-present || {
      #       echo "⚠️ Type check failed, trying alternative approach..."
      #       # Fallback: run svelte-check directly with npx
      #       npx svelte-check --tsconfig ./tsconfig.json || {
      #         echo "❌ Type check failed even with fallback"
      #         exit 1
      #       }
      #     }

      - name: Run unit tests
        working-directory: web
        run: npm run test

      - name: Build app
        working-directory: web
        run: npm run build --if-present

      # Only run Docker and release steps on push to main
      - name: Install semantic-release dependencies
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: web
        run: |
          npm ci
          npm install -g semantic-release @semantic-release/changelog @semantic-release/npm

      - name: Run semantic-release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "🔍 [semantic-release] Starting release process..."
          echo "🔍 [semantic-release] Working directory: $(pwd)"
          echo "🔍 [semantic-release] Node version: $(node --version)"
          echo "🔍 [semantic-release] NPM version: $(npm --version)"
          echo "🔍 [semantic-release] Repository: $GITHUB_REPOSITORY"
          echo "🔍 [semantic-release] Branch: ${{ github.ref }}"
          echo "🔍 [semantic-release] Commit: ${{ github.sha }}"

          npx semantic-release --debug

      - name: Get version from semantic-release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: web
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            zehbart/wayli:v${{ env.VERSION }}
            zehbart/wayli:latest
            zehbart/wayli:${{ env.SHORT_SHA }}

      # Note: GitHub release is automatically created by semantic-release
      # No need for manual release creation
