name: Release Helm Charts

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

# Required permissions for GitHub Pages and releases
permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    # Only run if Release workflow succeeded (or if manually triggered)
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for chart changes
        id: chart_changes
        run: |
          # Check if last commit was a version bump from this workflow
          LAST_COMMIT_MSG=$(git log -1 --format='%s')
          if [[ "$LAST_COMMIT_MSG" == "chore(chart): Release version"* ]]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Last commit was automated version bump, skipping to avoid loop"
            exit 0
          fi

          # If manually triggered or Chart.yaml push, always process
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📦 Chart release triggered by ${{ github.event_name }}"
          # Check if charts were modified in the last commit (from Release workflow)
          elif git diff --name-only HEAD~1 HEAD | grep -q '^charts/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📦 Chart files were modified in Release workflow commit"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No chart files were modified, skipping release"
          fi

      - name: Configure Git
        if: steps.chart_changes.outputs.changed == 'true'
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        if: steps.chart_changes.outputs.changed == 'true'
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Add Helm repositories
        if: steps.chart_changes.outputs.changed == 'true'
        run: |
          helm repo add supabase-helm https://wayli-app.github.io/supabase-helm
          helm repo update

      - name: Update chart dependencies
        if: steps.chart_changes.outputs.changed == 'true'
        run: |
          helm dependency update charts/wayli

      - name: Bump chart version
        if: steps.chart_changes.outputs.changed == 'true'
        run: |
          # Get current version
          CURRENT_VERSION=$(grep '^version:' charts/wayli/Chart.yaml | awk '{print $2}')
          echo "📦 Current chart version: $CURRENT_VERSION"

          # Bump patch version
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "📦 Bumping to version: $NEW_VERSION"

          # Update Chart.yaml
          sed -i "s/^version: .*/version: $NEW_VERSION/" charts/wayli/Chart.yaml

          # Commit the version bump
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add charts/wayli/Chart.yaml
          git commit -m "chore(chart): Release version $NEW_VERSION" || echo "No changes to commit"
          git push || echo "Nothing to push"

          echo "chart_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Run chart-releaser
        if: steps.chart_changes.outputs.changed == 'true'
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts
          config: .github/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"
