{{- $web := printf "%s-web" (include "wayli.fullname" .) -}}
{{- $worker := printf "%s-worker" (include "wayli.fullname" .) -}}

** Wayli has been deployed! **

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }} -n {{ .Release.Namespace }}
  $ helm get all {{ .Release.Name }} -n {{ .Release.Namespace }}

{{- if .Values.ingress.enabled }}

===================
ACCESSING WAYLI
===================

Console/App URL:
  {{- if .Values.ingress.tls }}
  https://{{ .Values.ingress.hostname }}
  {{- else }}
  http://{{ .Values.ingress.hostname }}
  {{- end }}

{{- else }}

Wayli is not exposed via Ingress. To access it:

1. Forward the web service port:
   kubectl port-forward -n {{ .Release.Namespace }} svc/{{ $web }} 8080:{{ .Values.web.service.port }}

2. Access Wayli at: http://localhost:8080

{{- end }}

===================
COMPONENTS DEPLOYED
===================

{{- if .Values.web.enabled }}
‚úì Web Application ({{ .Values.web.replicaCount }} replicas)
{{- if .Values.web.autoscaling.enabled }}
  - HPA enabled: {{ .Values.web.autoscaling.minReplicas }}-{{ .Values.web.autoscaling.maxReplicas }} replicas
{{- end }}
{{- end }}

{{- if .Values.worker.enabled }}
‚úì Worker StatefulSet ({{ .Values.worker.replicaCount }} replicas)
{{- if .Values.worker.autoscaling.enabled }}
  - HPA enabled: {{ .Values.worker.autoscaling.minReplicas }}-{{ .Values.worker.autoscaling.maxReplicas }} replicas
{{- end }}
{{- end }}

{{- if .Values.supabase.enabled }}
‚úì Supabase (subchart)
{{- if .Values.supabase.db.pgbouncer.enabled }}
  - PgBouncer enabled
{{- end }}
{{- end }}

===================
USEFUL COMMANDS
===================

View logs:
  Web:    kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/component=web -f
  Worker: kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/component=worker -f

Get pod status:
  kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}

Describe deployments:
  kubectl describe deployment -n {{ .Release.Namespace }} {{ $web }}
  kubectl describe statefulset -n {{ .Release.Namespace }} {{ $worker }}

===================
CONFIGURATION
===================

Supabase URL: {{ include "wayli.supabase.url" . }}
Database: {{ include "wayli.supabase.dbHost" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ include "wayli.supabase.dbPort" . }}

{{- if not .Values.supabase.global.supabase.existingSecret }}

‚ö†Ô∏è  WARNING: Secrets are created from values.yaml
    For production, use supabase.global.supabase.existingSecret to reference an external secret.
{{- end }}

{{- if and (not .Values.supabase.global.supabase.existingSecret) (not .Values.secrets.supabase.values.jwtSecret) }}

‚ö†Ô∏è  SECURITY WARNING: No JWT secret configured!
    Set supabase.global.supabase.existingSecret or secrets.supabase.values.jwtSecret
{{- end }}

===================
NEXT STEPS
===================

1. Configure your Supabase instance
2. Set up DNS records for your ingress hostnames
3. Configure TLS certificates (if using cert-manager)
4. Monitor your deployment:
   kubectl get all -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}

For more information, visit:
  https://github.com/wayli-app/wayli

Enjoy using Wayli! üó∫Ô∏è
